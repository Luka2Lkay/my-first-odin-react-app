{"version":3,"sources":["components/Overview.js","App.js","index.js"],"names":["Overview","props","tasks","map","task","text","id","App","handleChange","e","setState","target","value","state","onSubmitTask","preventDefault","concat","uniqid","this","onSubmit","htmlFor","onChange","type","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAkBeA,EAfE,SAACC,GACd,IAAOC,EAASD,EAATC,MAEH,OAEI,6BACKA,EAAMC,KAAI,SAAAC,GAEP,OAAO,6BAAmBA,EAAKC,MAAfD,EAAKE,U,gBCgD1BC,E,kDAnDb,aAAe,IAAD,8BACZ,gBAQFC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZN,KAAM,CACJC,KAAMI,EAAEE,OAAOC,MACfN,GAAI,EAAKO,MAAMT,KAAKE,OAbZ,EAkBdQ,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKL,SAAS,CACZR,MAAO,EAAKW,MAAMX,MAAMc,OAAO,EAAKH,MAAMT,MAC1CA,KAAM,CAACC,KAAM,GAAIC,GAAIW,UApBvB,EAAKJ,MAAQ,CACXT,KAAM,CAACC,KAAM,GAAIC,GAAIW,OACrBf,MAAO,IAJG,E,0CA0Bb,WAEE,MAAsBgB,KAAKL,MAApBT,EAAP,EAAOA,KAAMF,EAAb,EAAaA,MAGb,OACG,gCAKE,uBAAMiB,SAAYD,KAAKJ,aAAvB,UACE,uBAAOM,QAAQ,YAAf,wBAIA,uBAAOC,SAAYH,KAAKV,aAAcI,MAASR,EAAKC,KAAMiB,KAAK,OAAOhB,GAAG,cACzE,wBAAQgB,KAAK,SAAb,yBAEF,cAAC,EAAD,CAAUpB,MAAOA,W,GA/CTqB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83afc170.chunk.js","sourcesContent":["/* eslint-disable no-lone-blocks */\nimport React from 'react';\n\nconst Overview = (props) =>{\n    const {tasks} = props;  {/*Destructuring*/}\n\n        return (\n\n            <ul>\n                {tasks.map(task => {\n                    // eslint-disable-next-line no-unreachable\n                    return <li key={task.id}>{task.text}</li>;  {/* Displays an unordered list of tasks*/}\n                }) \n                }\n            </ul>\n        );\n    };\n\nexport default Overview;","import React, {Component} from \"react\";\nimport Overview from \"./components/Overview\";\nimport uniqid from \"uniqid\";\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      task: {text: '', id: uniqid()},\n      tasks: [],\n    };\n  \n  }\n\n  handleChange = (e) =>{\n    this.setState({\n      task: {\n        text: e.target.value,\n        id: this.state.task.id,\n      }\n    })\n  }\n\n  onSubmitTask = (e) =>{\n    e.preventDefault();\n    this.setState({\n      tasks: this.state.tasks.concat(this.state.task),\n      task: {text: '', id: uniqid()},\n    });\n  }\n\n   render(){\n    \n     const {task, tasks} = this.state;  \n // eslint-disable-next-line no-lone-blocks\n {/*Detructuring for cleaner code*/}\n     return (\n        <div>\n\n          {/* Use onSubmit in the form tag if the button type is set to submit.\n          Alternatively, you can use onClick in the button tag to submit the form */}\n\n          <form onSubmit = {this.onSubmitTask} >\n            <label htmlFor=\"taskInput\">Enter task</label>\n          \n            {/* Specify the value of the input field to be what I saved in my task object */}\n          \n            <input onChange = {this.handleChange} value = {task.text} type=\"text\" id=\"taskInput\"/>\n            <button type=\"submit\">Add Task</button>\n          </form>\n          <Overview tasks={tasks}/>\n        </div>\n     );\n   }\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}